{
  "posts": [
    {
      "title": "bootstrap拆分",
      "source": "/source/_posts/1418022536900.md",
      "author": "uedtianji",
      "date": 1418022536900,
      "desc": "###bootstrap拆分\n===================  \nBootstrap是目前最受欢迎的前端框架。他功能强大囊括了页面编写的方方面面，但有时候我们只需要其中部分功能，例如栅格、按钮；却不得不引用整个bootstrap的css。文件庞大不说还容易造成class的污染，一些css属性被莫名其妙的重置，且class优先级混乱。  \n\n\n本项目的目的就是将bootstrap按功能拆分为几个单独文件，去掉一些影响全局的属性。需要某个功能时可以直接引用单个文件，且尽量不影响原有css。  \n本项目使用的版本为 [Bootstrap v3.3.0](https://github.com/twbs/bootstrap) \n\n>bootstrap拆分为：  \n>样式重置：css/reset.css  ",
      "github": "https://raw.githubusercontent.com/uedtianji/bootSplit/master/README.md",
      "github_fullname": "uedtianji/bootSplit"
    },
    {
      "title": "zepto.slitslider.js",
      "source": "/source/_posts/1418022537501.md",
      "author": "cyclegtx",
      "date": 1418022537501,
      "desc": "zepto.slitslider.js\n===================\n\nA slitslider remake using Zepto.js same with [jquery.slitslider.js](https://github.com/codrops/SlitSlider).  \n[DEMO](http://www.iloushi.cn/ued/zepto-slitslider/)  \nRequired files:  \n1.zepto.js  \n2.zepto.fx.js  \n\n",
      "github": "https://raw.githubusercontent.com/cyclegtx/zepto-slitslider/master/README.md",
      "github_fullname": "cyclegtx/zepto-slitslider"
    },
    {
      "title": "修改Zepto One Page Scroll by Pete R.",
      "source": "/source/_posts/1418022537857.md",
      "author": "uedtianji",
      "date": 1418022537857,
      "desc": "#修改Zepto One Page Scroll by Pete R.\n修改自Pete R.的Zepto One Page Scroll插件，查看原版或者使用方法点[这里](https://github.com/peachananr/zepto-onepage-scroll)\n\n修改部分：  \n>1.将高度改为百分比  \n>2.如果body节点含有class```disabled-onepage-scroll```则插件停止响应滚动。  \n",
      "github": "https://raw.githubusercontent.com/uedtianji/zepto-onepage-scroll/master/README.md",
      "github_fullname": "uedtianji/zepto-onepage-scroll"
    },
    {
      "title": "移动单页设计指南",
      "source": "/source/_posts/1418022536925.md",
      "author": "uedtianji",
      "date": 1418022536925,
      "desc": "移动单页设计指南\n=======\n本指南只针对现在流行的交互单页设计，且以微信中浏览为准，分辨率上以iphone手机为基准。  \n![交互单页](https://raw.githubusercontent.com/uedtianji/mobile_design_guide/master/img/1.gif)  \n上图就是交互单页的例子，这种页面具有以下特点：  \n>1.内容分为多个单页。  \n>2.每个单页都充满整个屏幕。  \n>3.单页之间依靠上下滑进行页面间的转换。  \n\n",
      "github": "https://raw.githubusercontent.com/uedtianji/mobile_design_guide/master/README.md",
      "github_fullname": "uedtianji/mobile_design_guide"
    },
    {
      "title": "canvas制作波浪状动态背景",
      "source": "/source/_posts/1418022539849.md",
      "author": "cyclegtx",
      "date": 1418022539849,
      "desc": "canvas制作波浪状动态背景\n===============\n先看效果图  \n![效果图](https://raw.githubusercontent.com/cyclegtx/wave_background/gh-pages/images/1.gif)  \n\n此页面是微信公众帐号《玩转三里屯》中的“消费指南”功能所用的页面。考虑到页面只在手机中浏览，而且手机对canvas的支持又非常好，所以打算使用canvas做点不一样的动画。  \n\n<a href=\"http://cssdeck.com/labs/collab/u73pt0ew\" target=\"_blank\">代码在线预览</a>  \n\n",
      "github": "https://raw.githubusercontent.com/cyclegtx/wave_background/master/README.md",
      "github_fullname": "cyclegtx/wave_background"
    },
    {
      "title": "微信OAuth2.0网页授权接口",
      "source": "/source/_posts/1418022537560.md",
      "author": "uedtianji",
      "date": 1418022537560,
      "desc": "微信OAuth2.0网页授权接口\n===========\n\n微信OAuth2.0网页授权接口的thinkphp实现版本，主要实现了oauth网页受权，以及部分其他接口。  \n[使用方法](#usage)\n\n####为什么用OAuth2.0受权？  \n通过OAuth2.0受权的网页将会获取到打开者的微信信息，甚至包括微信昵称、头像等有用的数据，开发者们可以凭此设计出更多更丰富的页面应用，比如最近一直很火爆的红包类活动。除此之外还有个额外的好处，就是可以控制页面在非微信浏览器中无法打开，可以减少代码被人窥窃的风险。   \n\n####那么红包类活动是如何使用OAuth2.0受权接口的呢？    ",
      "github": "https://raw.githubusercontent.com/uedtianji/weixin_auth/master/README.md",
      "github_fullname": "uedtianji/weixin_auth"
    },
    {
      "title": "用Canvas制作可以根据手势摆动的树",
      "source": "/source/_posts/1418022539186.md",
      "author": "cyclegtx",
      "date": 1418022539186,
      "desc": "用Canvas制作可以根据手势摆动的树\n===========  \n![最终效果](https://raw.githubusercontent.com/cyclegtx/rocked_tree/master/images/1.gif)  \n根据工作的需要，制作一个摆动的树做为页面的背景。为了增加页面的交互性，我又为背景中的树增加了鼠标（触控）事件，使他能够根据鼠标（触控）做出相应的动作，当手指做上下或者左右滑动的时候树会跟着摆动。  \n\n\n####Step1.完成HTML页面，新建一个Tree类  \n\n完成HTML页面后新建一个Tree类用来记录树的各个属性。其中```x,y```为树根部的坐标值，```branchLen,branchWidth```分别是树枝的长度与宽度，```depth```为树枝的层数，```canvas```用来接页面中的canvas元素（默认是ID为canvas的元素）。\n```javascript",
      "github": "https://raw.githubusercontent.com/cyclegtx/rocked_tree/master/README.md",
      "github_fullname": "cyclegtx/rocked_tree"
    },
    {
      "title": "dynamic_background",
      "source": "/source/_posts/1418022538049.md",
      "author": "cyclegtx",
      "date": 1418022538049,
      "desc": "dynamic_background\n==================\n\n####动态背景  \n利用多层背景的交替淡入淡出，实现一种背景在不停变换的效果，先看图。\n效果图：  \n![效果图](https://raw.githubusercontent.com/uedtianji/dynamic_background/master/img/1.gif)  \n[DEMO地址](http://cssdeck.com/labs/collab/9fz8mhu9)  \n\n#####步骤",
      "github": "https://raw.githubusercontent.com/cyclegtx/dynamic_background/master/README.md",
      "github_fullname": "cyclegtx/dynamic_background"
    },
    {
      "title": "腾讯Burberry线上营销页面特效",
      "source": "/source/_posts/1418022536915.md",
      "author": "cyclegtx",
      "date": 1418022536915,
      "desc": "腾讯Burberry线上营销页面特效\n============\n![最终效果](https://raw.githubusercontent.com/cyclegtx/burberryshow/master/images/xg.gif)  \n\n4月24日，Burberry亚太地区规模最大的旗舰店在上海开幕。Burberry突破性地运用了诸多创新的数字营销模式，借助与腾讯的合作，为更多未能到场的用户创造了一个“平行的体验”，也正式开启了Burberry的创新数字营销之旅。  \n\n其中多次用到了开头的图片中类似于云雾褪去的效果。      ",
      "github": "https://raw.githubusercontent.com/cyclegtx/burberryshow/master/README.md",
      "github_fullname": "cyclegtx/burberryshow"
    },
    {
      "title": "如何使用Github中的README.md写博客文章  ",
      "source": "/source/_posts/1418200719083.md",
      "author": "uedtianji",
      "date": 1418200719083,
      "desc": "**什么是README.md？**  \nREADME.md是github中用来描述项目的文档，使用```markdown```语言，markdown是一种标记语言相比于html更加的易读而且完全兼容html。  \n在github项目中每个目录下面的README.md文档将会被翻译成html显示在该目录的github页面中。  \n\n\n**为什么使用github**  \ngithub提供了免费的存放图片的空间。  \ngithub的目录可以很好的作为文章章节管理。  ",
      "github": "https://raw.githubusercontent.com/uedtianji/writing_on_readme/master/README.md",
      "github_fullname": "uedtianji/writing_on_readme"
    },
    {
      "title": "如何使用Github pages写博客  ",
      "source": "/source/_posts/1418200713026.md",
      "author": "uedtianji",
      "date": 1418200713026,
      "desc": "**为什么要用Github搭建博客？**  \n\n**免费**，虽然csdn、cnblog也是免费的，但是那种只提供在线编辑，不能随意修改页面样式的网站当然没法满足我们这种折腾惯了的个人站长。用wordpress自己搭建网站，租用服务器也是一笔费用。而github可以随意定制、指定自己的域名，完全满足个人站长的需求，关键是完全免费。  \n\n**Markdown**便捷的文章书写体验,虽然 zblog、wordpress安装插件也可以支持markdown语法，但是github的README.md一直使用markdown语法直接显示在项目的页面中，使用markdown的支持更方便。  \n\n**Github pages 无法实现什么功能？**  \n",
      "github": "https://raw.githubusercontent.com/uedtianji/writing_blogs_on_github/master/README.md",
      "github_fullname": "uedtianji/writing_blogs_on_github"
    },
    {
      "title": "使用Snap.svg制作svg动画  ",
      "source": "/source/_posts/1419847425335.md",
      "author": "zhangzicong6",
      "date": 1419847425335,
      "desc": "##使用Snap.svg制作svg动画  \n![svg图片](https://raw.githubusercontent.com/zhangzicong6/svg-animation/master/img/ani.gif)  \n<a href=\"http://zhangzicong6.github.io/svg-animation/\" target=\"_blank\">测试地址</a>  \n上图的效果是使用svg制作，在html5风靡之后设计师对动画细节的要求也越来越高，像上图那种圆点炸开的动画如果使用html+css去做的话需要把每个元素切成很小的png然后分别做动画。这样不仅性能上会捉襟见肘，页面大小上也无法接受。使用svg后不仅可以很好的解决大小与性能问题，还可以做出很多html无法实现的效果。那么问题来了，html有jquery、zepto那样的js库可以方便的操作节点，svg有没有呢？有！而且是jquery风格的库，那就是Snap.svg.js。有了他就可以轻松的操作svg做动画了。  \n##准备效果图  \n在编写html页面的时候一般是把效果图切成需要的部分，而svg更加方便了根本不需要切图，只需要将svg文件中的svg部分粘贴到html就可以把效果图直接展示在页面上。一般效果图是由设计师用Adobe Illustrator(AI)制作，用ai另存为svg格式文件就可以用编辑器直接打开了。  \n```svg\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- Generator: Adobe Illustrator 16.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">",
      "github": "https://raw.githubusercontent.com/zhangzicong6/svg-animation/master/README.md",
      "github_fullname": "zhangzicong6/svg-animation"
    },
    {
      "title": "下拉刷新--模仿水滴",
      "source": "/source/_posts/1419868783226.md",
      "author": "cyclegtx",
      "date": 1419868783226,
      "desc": "#下拉刷新--模仿水滴\n![最终效果](https://raw.githubusercontent.com/cyclegtx/drop.js/master/images/1.gif)  \n<a href=\"http://cyclegtx.github.io/drop.js/\" target=\"_blank\">测试地址</a>  \n这种拟物的设计曾经多次用在IOS的设计中，上图的下拉刷新就是模仿自苹果的Podcast(播客)。随着系统扁平化设计的步步深入，这种可以让人心领神会的小动画渐渐的被更加标准的旋转的菊花所代替。拟物扁平孰优孰劣，已经不在重要，这里只是想用web技术再仿制一次这个神奇的小水滴。可能已经再也用不上，仅仅作为向优秀设计的致敬。  \n\n效果中的圆圈可以根据手势被拉长，而且在弹回的时候速度由快变慢，有一种橡皮的感觉。速度由快变慢可以使用tween.js中的缓动函数解决，但是变形的圆圈css3有点鞭长莫及，而且考虑到效率的问题还是使用canvas直接绘制。  \n\n仔细考虑后将变形的圆圈分成3个部分，上下两个圆圈，加上中间一个向内凹陷的矩形。  \n![](https://raw.githubusercontent.com/cyclegtx/drop.js/master/images/1-1.jpg)   \n上下圆使用```arc()```绘制，中间蓝色的矩形只能使用```beginPath()```来绘制。在绘制的过程中直线部分使用```lineTo()```可以直接绘制，那曲线部分呢？自然是是用贝塞尔曲线,这里使用二次贝塞尔曲线```quadraticCurveTo()```就可以了,三次方贝塞尔曲线也可以但是要增加个控制点，增加了复杂度。可以在photoshop中使用钢笔工具画出这个不规则矩形,来形象的观察贝塞尔曲线的控制点要放置什么位置，因为钢笔工具也是使用贝塞尔曲线实现的。我在代码编写的过程中就是通过ps中钢笔工具来反复尝试控制点的位置。  ",
      "github": "https://raw.githubusercontent.com/cyclegtx/drop.js/master/README.md",
      "github_fullname": "cyclegtx/drop.js"
    },
    {
      "title": "作用力和小球",
      "source": "/source/_posts/1420009456014.md",
      "author": "cyclegtx",
      "date": 1420009456014,
      "desc": "#作用力和小球\n![最终效果](https://raw.githubusercontent.com/cyclegtx/force_ball/master/images/1.gif)  \n<a href=\"http://cyclegtx.github.io/force_ball/\" target=\"_blank\">测试地址</a>  \n上面的这种神奇的效果是使用D3.js实现的，d3的是代码库和教程请参见[这里](https://github.com/mbostock/d3)。d3是一个极其强大的数据图表库，尤其擅长操作svg，虽然被设计用来展示数据，但是其丰富的svg操作方法还有物理引擎可以被我们用来制作页面的展示。例子中的展示页面就是目前我们公司主要的产品，采用此种展示方式其效果自然是不言而喻。  \n\n分析下效果，主要是一些节点与连线，再加上节点间相互的引力与斥力还有重力效果。节点与连接线好说，使用d3绘制出svg即可；相互作用力可以使用d3提供的force中相应的方法实现。关于d3详细教程请参见其官网，这里只介绍使用到的部分。  \n首先将节点数据储存到数据文件中data.json  \n```json\n{\n  \"nodes\":[",
      "github": "https://raw.githubusercontent.com/cyclegtx/force_ball/master/README.md",
      "github_fullname": "cyclegtx/force_ball"
    }
  ]
}
